// <auto-generated />
using CaravanMVC.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CaravanMVC.Migrations
{
    [DbContext(typeof(CaravanMvcContext))]
    [Migration("20230821195139_DBInitWithData")]
    partial class DBInitWithData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CaravanMVC.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("destination");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("WagonId")
                        .HasColumnType("integer")
                        .HasColumnName("wagon_id");

                    b.HasKey("Id")
                        .HasName("pk_passengers");

                    b.HasIndex("WagonId")
                        .HasDatabaseName("ix_passengers_wagon_id");

                    b.ToTable("passengers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            Destination = "The Gold Coast",
                            Name = "Joey",
                            WagonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 27,
                            Destination = "The Gold Coast",
                            Name = "Cole",
                            WagonId = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 33,
                            Destination = "The Gold Coast",
                            Name = "Jimy",
                            WagonId = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 53,
                            Destination = "The Cold Mid-West",
                            Name = "Joseph",
                            WagonId = 2
                        },
                        new
                        {
                            Id = 5,
                            Age = 24,
                            Destination = "The Cold Mid-West",
                            Name = "Seth",
                            WagonId = 2
                        },
                        new
                        {
                            Id = 6,
                            Age = 83,
                            Destination = "The Cold Mid-West",
                            Name = "Gole",
                            WagonId = 2
                        });
                });

            modelBuilder.Entity("CaravanMVC.Models.Wagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Covered")
                        .HasColumnType("boolean")
                        .HasColumnName("covered");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("NumWheels")
                        .HasColumnType("integer")
                        .HasColumnName("num_wheels");

                    b.HasKey("Id")
                        .HasName("pk_wagons");

                    b.ToTable("wagons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Covered = true,
                            Name = "Wagon One",
                            NumWheels = 4
                        },
                        new
                        {
                            Id = 2,
                            Covered = false,
                            Name = "Wagon Two",
                            NumWheels = 8
                        });
                });

            modelBuilder.Entity("CaravanMVC.Models.Passenger", b =>
                {
                    b.HasOne("CaravanMVC.Models.Wagon", "Wagon")
                        .WithMany("Passengers")
                        .HasForeignKey("WagonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_passengers_wagons_wagon_id");

                    b.Navigation("Wagon");
                });

            modelBuilder.Entity("CaravanMVC.Models.Wagon", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
